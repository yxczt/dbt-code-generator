Example of a staging SQL model:
-- stg_stripe__payments.sql

with

source as (

    select * from {{ source('stripe','payment') }}

),

renamed as (

    select
        -- ids
        id as payment_id,
        orderid as order_id,

        -- strings
        paymentmethod as payment_method,
        case
            when payment_method in ('stripe', 'paypal', 'credit_card', 'gift_card') then 'credit'
            else 'cash'
        end as payment_type,
        status,

        -- numerics
        amount as amount_cents,
        amount / 100.0 as amount,

        -- booleans
        case
            when status = 'successful' then true
            else false
        end as is_completed_payment,

        -- dates
        date_trunc('day', created) as created_date,

        -- timestamps
        created::timestamp_ltz as created_at

    from source

)

select * from renamed

Example of a layer's YAML file, that describes it's properties:

-- _stg_jaffle_shop.yml 

version: 2

models:
  - name: stg_jaffle_shop__customers
    description: "The staging model for customers."
    config:
      tags: ['pii']
    columns:
      - name: customer_id
        description: "Id of a customer, primary key for the table."
        tests:
          - unique
          - not_null

  - name: stg_jaffle_shop__orders
    description: "The staging model for orders."
    config:
      materialized: view
    columns:
      - name: order_id
        description: "Id of a order, primary key for the table."
        tests:
          - unique
          - not_null
      - name: status
        description: "An order's status."
        tests:
          - accepted_values:
              values: ['placed', 'shipped', 'completed', 'return_pending', 'returned']
              config:
                severity: warn